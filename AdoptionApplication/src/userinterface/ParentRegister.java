/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface;

import Business.Directory.Counsellor;
import Business.Directory.Parents;
import Business.Directory.ParentsDirectory;
import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Enterprise.HospitalEnterprise;
import Business.Mail.ConfigUtility;
import Business.Mail.EmailUtility;
import Business.Mail.EmailVariables;
import Business.Network.Network;
import Business.Organization.Organization;
import Business.UserAccount.UserAccount;
import Business.Validations.ValidateEmailTextField;
import Business.Validations.ValidatePasswords;
import Business.Validations.ValidateStrings;
import Business.WorkQueue.ParentToCounselor;
import java.awt.CardLayout;
import java.awt.Color;
import java.io.File;
import java.util.Properties;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javafx.stage.FileChooser;
import javax.swing.BorderFactory;
import javax.swing.InputVerifier;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author Joy
 */
public class ParentRegister extends javax.swing.JPanel {

    /**
     * Creates new form ParentRegister
     */
    
    EcoSystem system;
    JPanel userProcessContainer;
    private String username;
    private static int count = 0;
    private String email;
    private String password;
    private boolean worstCaseScenerio;
    private boolean finChild;
    private boolean bigChanges;
    private boolean comSituation;
    private boolean currChildrenOnBoard;
    private boolean eduRealities;
    private boolean promises;
    private boolean guilt;
    private ParentsDirectory parentDirectory;
    private ParentToCounselor parentToCounselor;
    private Enterprise enterprise;
    private Organization organization;
    private ConfigUtility configUtil;
    private EmailUtility emailUtil;
    
    
    public ParentRegister(JPanel userProcessContainer, EcoSystem system) {
        initComponents();
        this.emailUtil = new EmailUtility();
        this.configUtil = new ConfigUtility();
        this.userProcessContainer = userProcessContainer;
        this.system = system;
        populateComboBox();
        addInputVerifiers();
    }

       private void addInputVerifiers() {
        InputVerifier stringValidation = new ValidateStrings();
        
        InputVerifier passwordValidation = new ValidatePasswords();
        InputVerifier emailValidation = new ValidateEmailTextField();
        txtUsername.setInputVerifier(stringValidation);
   
        txtPassword.setInputVerifier(passwordValidation);
        txtConfPassword.setInputVerifier(passwordValidation);
        txtEmail.setInputVerifier(emailValidation);
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        txtEmail = new javax.swing.JTextField();
        passwordLabel = new javax.swing.JLabel();
        txtPassword = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtConfPassword = new javax.swing.JTextField();
        hospitalJComboBox = new javax.swing.JComboBox();
        jLabel13 = new javax.swing.JLabel();
        usrNameLabel = new javax.swing.JLabel();
        txtUsername = new javax.swing.JTextField();
        emailIdLbl = new javax.swing.JLabel();
        btnConfirm = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        isChildrenOnBoard = new javax.swing.JRadioButton();
        notOnBoardChildren = new javax.swing.JRadioButton();
        jLabel10 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        notPrepared = new javax.swing.JRadioButton();
        isPrepared = new javax.swing.JRadioButton();
        isFinance = new javax.swing.JRadioButton();
        notSelectFinance = new javax.swing.JRadioButton();
        isEducated = new javax.swing.JRadioButton();
        notEducated = new javax.swing.JRadioButton();
        jLabel11 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        isBigChange = new javax.swing.JRadioButton();
        notBigChange = new javax.swing.JRadioButton();
        isComfortable = new javax.swing.JRadioButton();
        jLabel8 = new javax.swing.JLabel();
        notComfortable = new javax.swing.JRadioButton();
        isGuilty = new javax.swing.JRadioButton();
        notGuilty = new javax.swing.JRadioButton();
        jLabel12 = new javax.swing.JLabel();
        notPromise = new javax.swing.JRadioButton();
        isPromise = new javax.swing.JRadioButton();

        setBackground(new java.awt.Color(51, 122, 183));
        setMaximumSize(new java.awt.Dimension(1245, 1000));
        setMinimumSize(new java.awt.Dimension(1245, 1000));
        setPreferredSize(new java.awt.Dimension(1245, 1000));

        passwordLabel.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        passwordLabel.setText("Password*:");

        txtPassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPasswordActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel3.setText("Confirm Password*:");

        hospitalJComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel13.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel13.setText("Select Hospital:");

        usrNameLabel.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        usrNameLabel.setText("Username*:");

        txtUsername.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtUsernameActionPerformed(evt);
            }
        });

        emailIdLbl.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        emailIdLbl.setText("Email*:");

        btnConfirm.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        btnConfirm.setText("CONFIRM");
        btnConfirm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConfirmActionPerformed(evt);
            }
        });

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/left-arrow-in-circular-button-black-symbol-2.png"))); // NOI18N
        jButton1.setText("Back");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel5.setText("You are prepared for the “worst case scenario.”");

        jLabel9.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel9.setText("Your current children are on board with the situation.");

        isChildrenOnBoard.setText("Yes");
        isChildrenOnBoard.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                isChildrenOnBoardActionPerformed(evt);
            }
        });

        notOnBoardChildren.setText("No");
        notOnBoardChildren.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                notOnBoardChildrenActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel10.setText("You are educated about the realities of the type of adoption you are pursuing.");

        jLabel6.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel6.setText("You are financially prepared for the child.");

        notPrepared.setText("No");
        notPrepared.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                notPreparedActionPerformed(evt);
            }
        });

        isPrepared.setText("Yes");
        isPrepared.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                isPreparedActionPerformed(evt);
            }
        });

        isFinance.setText("Yes");
        isFinance.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                isFinanceActionPerformed(evt);
            }
        });

        notSelectFinance.setText("No");
        notSelectFinance.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                notSelectFinanceActionPerformed(evt);
            }
        });

        isEducated.setText("Yes");
        isEducated.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                isEducatedActionPerformed(evt);
            }
        });

        notEducated.setText("No");
        notEducated.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                notEducatedActionPerformed(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel11.setText("You plan to make promises or commitments you actually can or will keep");

        jLabel7.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel7.setText("You are able or willing to make BIG changes.");

        isBigChange.setText("Yes");
        isBigChange.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                isBigChangeActionPerformed(evt);
            }
        });

        notBigChange.setText("No");
        notBigChange.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                notBigChangeActionPerformed(evt);
            }
        });

        isComfortable.setText("Yes");
        isComfortable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                isComfortableActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel8.setText("Your partner is comfortable with the situation.");

        notComfortable.setText("No");
        notComfortable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                notComfortableActionPerformed(evt);
            }
        });

        isGuilty.setText("Yes");
        isGuilty.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                isGuiltyActionPerformed(evt);
            }
        });

        notGuilty.setText("No");
        notGuilty.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                notGuiltyActionPerformed(evt);
            }
        });

        jLabel12.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel12.setText("You want to say “yes” not out of guilt.");

        notPromise.setText("No");
        notPromise.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                notPromiseActionPerformed(evt);
            }
        });

        isPromise.setText("Yes");
        isPromise.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                isPromiseActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addComponent(isFinance)
                .addGap(34, 34, 34)
                .addComponent(notSelectFinance)
                .addGap(403, 403, 403)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel10)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(isGuilty)
                        .addGap(40, 40, 40)
                        .addComponent(notGuilty))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(isPromise)
                        .addGap(36, 36, 36)
                        .addComponent(notPromise))
                    .addComponent(jLabel11)
                    .addComponent(jLabel12)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(isEducated)
                        .addGap(39, 39, 39)
                        .addComponent(notEducated)))
                .addGap(0, 45, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(441, 441, 441)
                        .addComponent(btnConfirm, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(41, 41, 41)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(isPrepared)
                                .addGap(34, 34, 34)
                                .addComponent(notPrepared)
                                .addGap(436, 436, 436)
                                .addComponent(isChildrenOnBoard)
                                .addGap(18, 18, 18)
                                .addComponent(notOnBoardChildren))
                            .addComponent(jLabel5)
                            .addComponent(jLabel6)
                            .addComponent(jLabel7)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(isBigChange)
                                .addGap(46, 46, 46)
                                .addComponent(notBigChange))
                            .addComponent(jLabel8)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(isComfortable)
                                .addGap(47, 47, 47)
                                .addComponent(notComfortable))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(93, 93, 93)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton1)
                                .addGap(237, 237, 237)
                                .addComponent(usrNameLabel))
                            .addComponent(jLabel3)
                            .addComponent(jLabel13)
                            .addComponent(emailIdLbl)
                            .addComponent(passwordLabel))
                        .addGap(80, 80, 80)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel9)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(txtUsername)
                                .addComponent(txtEmail)
                                .addComponent(txtPassword)
                                .addComponent(txtConfPassword)
                                .addComponent(hospitalJComboBox, 0, 222, Short.MAX_VALUE)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(63, 63, 63)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(usrNameLabel)
                        .addComponent(txtUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(emailIdLbl)
                    .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(passwordLabel)
                    .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(39, 39, 39)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtConfPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(hospitalJComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(62, 62, 62)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(isPrepared)
                            .addComponent(notPrepared))
                        .addGap(39, 39, 39)
                        .addComponent(jLabel6))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(66, 66, 66)
                        .addComponent(jLabel9)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(isChildrenOnBoard)
                            .addComponent(notOnBoardChildren))
                        .addGap(35, 35, 35)
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(isFinance)
                            .addComponent(notSelectFinance)
                            .addComponent(isEducated)
                            .addComponent(notEducated))))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(jLabel7))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jLabel11)))
                .addGap(5, 5, 5)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(notPromise)
                            .addComponent(isPromise))
                        .addGap(18, 18, 18)
                        .addComponent(jLabel12)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(notGuilty)
                            .addComponent(isGuilty)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(isBigChange)
                            .addComponent(notBigChange))
                        .addGap(18, 18, 18)
                        .addComponent(jLabel8)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(isComfortable)
                            .addComponent(notComfortable))))
                .addGap(55, 55, 55)
                .addComponent(btnConfirm, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(156, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void txtUsernameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtUsernameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtUsernameActionPerformed

    private void btnConfirmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConfirmActionPerformed
        // TODO add your handling code here:
        

            String username = txtUsername.getText();
            if (username.equals("")){
                JOptionPane.showMessageDialog(null, "Please enter the Username");
                return;
                //throw new RuntimeException("Please enter the Username");
            }
            
            String emailId = txtEmail.getText();
            if (emailId.equals("")){
                JOptionPane.showMessageDialog(null, "Please enter the Email Id");
                return;
                //throw new RuntimeException("Please enter the Email Id");
            }
            
            String password = txtPassword.getText();
            String confpassword = txtConfPassword.getText();
            if (password.equals("")){
                JOptionPane.showMessageDialog(null, "Please enter the password");
                return;
                //throw new RuntimeException("Please enter the password");
            }
            
            if (!password.equals(confpassword)){
                JOptionPane.showMessageDialog(null, "Confirm Password and Password should match");
                return;
                //throw new RuntimeException("Confirm Password and Password should match");
            }
               
        this.username = txtUsername.getText();
        this.email = txtEmail.getText();
        this.password = txtPassword.getText();
        if(isPrepared.isSelected()){
            this.worstCaseScenerio = true;
        }
        else
        this.worstCaseScenerio = false;

        if(isFinance.isSelected()){
            this.finChild = true;
        }
        else
        this.finChild = false;

        if(isBigChange.isSelected()){
            this.bigChanges = true;
        }
        else
        this.bigChanges = false;

        if(isComfortable.isSelected()){
            this.comSituation = true;
        }
        else
        this.comSituation = false;

        if(isChildrenOnBoard.isSelected()){
            this.currChildrenOnBoard = true;
        }
        else
        this.currChildrenOnBoard = false;

        if(isEducated.isSelected()){
            this.eduRealities = true;
        }
        else
        this.eduRealities = false;

        if(isPromise.isSelected()){
            this.promises = true;
        }
        else
        this.promises = false;

        if(isGuilty.isSelected()){
            this.guilt = true;
        }
        else
        this.guilt = false;

        HospitalEnterprise hospital = (HospitalEnterprise) hospitalJComboBox.getSelectedItem();

        if (hospital == null){
            JOptionPane.showMessageDialog(null, "Please select the Hospital");
            throw new RuntimeException("Please enter the Hospital");
        }
        if ( txtUsername == null){
            JOptionPane.showMessageDialog(null, "Please enter Username");
            throw new RuntimeException("Please enter username");
        }
            
        
        
        
        for (Network n : system.getNetworkList()){
            for (Enterprise e : n.getEnterpriseDirectory().getEnterpriseList()){
                if (e.getEnterpriseType().equals(Enterprise.EnterpriseType.Hospital)){
                    for(UserAccount ua : e.getUserAccountDirectory().getUserAccountList()){
                        if(ua.getUsername().equals(username)){
                            JOptionPane.showMessageDialog(null, "User Name already exists!, Please Enter valid user name","warning", JOptionPane.WARNING_MESSAGE);
                            return;
                        }
                        for(Organization o : e.getOrganizationDirectory().getOrganizationList()){
                            for(UserAccount ua1 : o.getUserAccountDirectory().getUserAccountList()){
                                if(ua1.getUsername().equals(username)){
                                    JOptionPane.showMessageDialog(null, "User Name already exists!, Please Enter valid user name","warning", JOptionPane.WARNING_MESSAGE);
                                    return;
                                }
                            }
                        }

                    }
                }
            }
        }
        
        Parents parent = new Parents(username, email, password,worstCaseScenerio,finChild, bigChanges, comSituation, currChildrenOnBoard, eduRealities, promises, guilt );
        hospital.getParentDirectory().addParents(parent);
        parentToCounselor = new ParentToCounselor("Please review the parent profile", parent);
        hospital.getWorkQueue().getParentToCounselor().add(parentToCounselor);
        sendMail(parent);
        
        JOptionPane.showMessageDialog(null, "Account Registered Successfully. Account sent to Counselor for Approval");
        
        txtUsername.setText("");
        txtEmail.setText("");
        txtPassword.setText("");
        txtConfPassword.setText("");


    }//GEN-LAST:event_btnConfirmActionPerformed

    private void txtPasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPasswordActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPasswordActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout cardlayout = (CardLayout) userProcessContainer.getLayout();
        cardlayout.previous(userProcessContainer);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void isPreparedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_isPreparedActionPerformed
        // TODO add your handling code here:
        notPrepared.setSelected(false);
    }//GEN-LAST:event_isPreparedActionPerformed

    private void notPreparedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_notPreparedActionPerformed
        // TODO add your handling code here:
        isPrepared.setSelected(false);
    }//GEN-LAST:event_notPreparedActionPerformed

    private void isFinanceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_isFinanceActionPerformed
        // TODO add your handling code here:
        notSelectFinance.setSelected(false);
    }//GEN-LAST:event_isFinanceActionPerformed

    private void notSelectFinanceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_notSelectFinanceActionPerformed
        // TODO add your handling code here:
        isFinance.setSelected(false);
    }//GEN-LAST:event_notSelectFinanceActionPerformed

    private void isBigChangeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_isBigChangeActionPerformed
        // TODO add your handling code here:
        notBigChange.setSelected(false);
    }//GEN-LAST:event_isBigChangeActionPerformed

    private void notBigChangeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_notBigChangeActionPerformed
        // TODO add your handling code here:
        isBigChange.setSelected(false);
    }//GEN-LAST:event_notBigChangeActionPerformed

    private void isComfortableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_isComfortableActionPerformed
        // TODO add your handling code here:
        notComfortable.setSelected(false);
    }//GEN-LAST:event_isComfortableActionPerformed

    private void notComfortableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_notComfortableActionPerformed
        // TODO add your handling code here:
        isComfortable.setSelected(false);
    }//GEN-LAST:event_notComfortableActionPerformed

    private void isChildrenOnBoardActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_isChildrenOnBoardActionPerformed
        // TODO add your handling code here:
        notOnBoardChildren.setSelected(false);
    }//GEN-LAST:event_isChildrenOnBoardActionPerformed

    private void notOnBoardChildrenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_notOnBoardChildrenActionPerformed
        // TODO add your handling code here:
        isChildrenOnBoard.setSelected(false);
    }//GEN-LAST:event_notOnBoardChildrenActionPerformed

    private void isEducatedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_isEducatedActionPerformed
        // TODO add your handling code here:
        notEducated.setSelected(false);
    }//GEN-LAST:event_isEducatedActionPerformed

    private void notEducatedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_notEducatedActionPerformed
        // TODO add your handling code here:
        isEducated.setSelected(false);
    }//GEN-LAST:event_notEducatedActionPerformed

    private void isPromiseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_isPromiseActionPerformed
        // TODO add your handling code here:
        notPromise.setSelected(false);
    }//GEN-LAST:event_isPromiseActionPerformed

    private void notPromiseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_notPromiseActionPerformed
        // TODO add your handling code here:
        isPromise.setSelected(false);
    }//GEN-LAST:event_notPromiseActionPerformed

    private void isGuiltyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_isGuiltyActionPerformed
        // TODO add your handling code here:
        notGuilty.setSelected(false);
    }//GEN-LAST:event_isGuiltyActionPerformed

    private void notGuiltyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_notGuiltyActionPerformed
        // TODO add your handling code here:
        isGuilty.setSelected(false);
    }//GEN-LAST:event_notGuiltyActionPerformed

    // Validation part

    /*private boolean emailIdPatternCorrect(){
        Pattern p=Pattern.compile("^[a-zA-Z0-9]+[a-zA-Z0-9]+@[a-zA-Z0-9]+.[a-zA-Z0-9]+$");
        Matcher m=p.matcher(txtEmail.getText());
        boolean b=m.matches();
        return b;
    }
    
     private boolean passwordPatternCorrect(){
        Pattern p1;
        p1 = Pattern.compile("^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$%^&*-]).{6,}$");
        Matcher m1=p1.matcher(txtPassword.getText());
        boolean b1=m1.matches();
        return b1;
    }*/
    
    public void sendMail(Parents parent){
         
        String toAddress = txtEmail.getText();
        String subject = "Family Registration";
        EmailVariables eVar = new EmailVariables();
        String start = eVar.getStart();
        String footer = eVar.getFooter();
        
        //FileChooser filePicker = new FileChooser();
        
        String content =  " <h3><br>Your Registration is successful! </br> <br>Your Profile ID is " + parent.getParentId()
                + " and your Userid: "+parent.getUsername()+"</br> <br> Kindly wait for your Counselor to review your details!</br></h3> <h2> Thank you! </h2>";
        
        String message = start + content + footer;
        File[] attachFiles = null;
        
        //File selectedFile = new File("..\\images\\adopt.jpg");
        //attachFiles = new File[] {selectedFile};
  
        try {
            Properties smtpProperties = configUtil.loadProperties();
            emailUtil.sendEmail(smtpProperties, toAddress, subject, message, attachFiles);

             
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this,
                    "Error while sending the e-mail: " + ex.getMessage(),
                    "Error", JOptionPane.ERROR_MESSAGE);
        }
     }
    
    
    
    private void populateComboBox() {
        //hospitalJComboBox.removeAllItems();
        hospitalJComboBox.removeAllItems();
        for(Network n: system.getNetworkList()){
            for(Enterprise e: n.getEnterpriseDirectory().getEnterpriseList()){
                if(e.getEnterpriseType().equals(Enterprise.EnterpriseType.Hospital)){
                    hospitalJComboBox.addItem(e);
                }    
            }
        }
    } 

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnConfirm;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel emailIdLbl;
    private javax.swing.JComboBox hospitalJComboBox;
    private javax.swing.JRadioButton isBigChange;
    private javax.swing.JRadioButton isChildrenOnBoard;
    private javax.swing.JRadioButton isComfortable;
    private javax.swing.JRadioButton isEducated;
    private javax.swing.JRadioButton isFinance;
    private javax.swing.JRadioButton isGuilty;
    private javax.swing.JRadioButton isPrepared;
    private javax.swing.JRadioButton isPromise;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JRadioButton notBigChange;
    private javax.swing.JRadioButton notComfortable;
    private javax.swing.JRadioButton notEducated;
    private javax.swing.JRadioButton notGuilty;
    private javax.swing.JRadioButton notOnBoardChildren;
    private javax.swing.JRadioButton notPrepared;
    private javax.swing.JRadioButton notPromise;
    private javax.swing.JRadioButton notSelectFinance;
    private javax.swing.JLabel passwordLabel;
    private javax.swing.JTextField txtConfPassword;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtPassword;
    private javax.swing.JTextField txtUsername;
    private javax.swing.JLabel usrNameLabel;
    // End of variables declaration//GEN-END:variables
}
